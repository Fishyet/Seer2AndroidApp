package MEncrypt
{
   import MEncrypt__3A__5C_alchemy_5C_cygwin_5C_tmp_5C_cc80XT98_2E_lto_2E_bc_3A_1b3fc948_2D_82a0_2D_4fee_2D_a9ab_2D_31c892a97f18.LCPI311_0;
   import avm2.intrinsics.memory.lf64;
   import avm2.intrinsics.memory.li32;
   import avm2.intrinsics.memory.sf64;
   import avm2.intrinsics.memory.si32;
   
   public function F_tgamma() : void
   {
      var _loc15_:int = 0;
      var _loc23_:* = NaN;
      var _loc1_:* = NaN;
      var _loc9_:* = NaN;
      var _loc10_:* = NaN;
      var _loc5_:Number = NaN;
      var _loc11_:Number = NaN;
      var _loc6_:* = NaN;
      var _loc12_:* = NaN;
      var _loc16_:int = 0;
      var _loc17_:int = 0;
      var _loc13_:* = (_loc15_ = ESP) - 720;
      if(!((_loc23_ = lf64(_loc15_)) < 6 | _loc23_ != _loc23_ | false))
      {
         if(!(_loc23_ <= 171.63 | _loc23_ != _loc23_ | false))
         {
            _loc23_ /= 0;
         }
         else
         {
            _loc13_ -= 16;
            var _loc14_:*;
            si32(_loc14_ = _loc15_ - 160,_loc13_);
            sf64(_loc23_,_loc13_ + 4);
            ESP = _loc13_;
            F___log__D();
            _loc13_ += 16;
            var _loc21_:* = _loc23_ + -0.5;
            sf64(_loc21_,_loc15_ - 176);
            var _loc30_:*;
            sf64(_loc30_ = lf64(_loc15_ - 176),_loc15_ - 240);
            var _loc31_:*;
            var _loc28_:*;
            si32(_loc28_ = li32(_loc28_ = (_loc28_ = _loc15_ - 240) | 4),(_loc31_ = _loc15_ - 248) | 4);
            sf64(lf64(_loc15_ - 176),_loc15_ - 232);
            si32(_loc14_ = (_loc14_ = li32(_loc15_ - 232)) & -134217728,_loc15_ - 248);
            var _loc25_:*;
            sf64(_loc25_ = lf64(_loc15_ - 248),_loc15_ - 176);
            _loc30_ = (_loc30_ = lf64(_loc15_ - 152)) * _loc21_;
            _loc21_ -= _loc25_;
            var _loc27_:* = lf64(_loc15_ - 160) + -1;
            var _loc29_:*;
            _loc27_ = (_loc21_ = (_loc21_ = (_loc21_ *= _loc27_) + _loc30_) + -0.00000677929532725822 + (_loc30_ = (_loc30_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc30_ = 1 / (_loc23_ * _loc23_)) * -0.014470556242142892) + 0.0056939446343941165) * _loc30_) + -0.001897735264638792) * _loc30_) + 0.0008414285603466537) * _loc30_) + -0.0005952350825666728) * _loc30_) + 0.0007936507787544356) * _loc30_) + -0.0027777777777454812) * _loc30_) + 0.08333333333333331) / _loc23_) + 0.4189453125 + (_loc25_ *= _loc27_);
            _loc13_ -= 16;
            sf64(_loc27_,_loc13_);
            sf64(_loc25_ = (_loc25_ = (_loc25_ -= _loc27_) + 0.4189453125) + _loc21_,_loc13_ + 8);
            ESP = _loc13_;
            F___exp__D();
            _loc13_ += 16;
            _loc23_ = st0;
         }
      }
      else if(!(_loc23_ < 1.0661243324683625 | _loc23_ != _loc23_ | false))
      {
         _loc1_ = _loc23_ + -1;
         if(!(_loc1_ > 1.0661243324683625 | _loc1_ != _loc1_ | false))
         {
            sf64(_loc25_ = _loc1_ + -0.46163214496836236,_loc15_ - 96);
            sf64(_loc21_ = lf64(_loc15_ - 96),_loc15_ - 264);
            var _loc26_:*;
            si32(_loc31_ = li32(_loc31_ = (_loc31_ = _loc15_ - 264) | 4),(_loc26_ = _loc15_ - 272) | 4);
            sf64(lf64(_loc15_ - 96),_loc15_ - 256);
            var _loc24_:*;
            si32(_loc24_ = (_loc24_ = li32(_loc15_ - 256)) & -134217728,_loc15_ - 272);
            sf64(_loc21_ = lf64(_loc15_ - 272),_loc15_ - 96);
            sf64(_loc27_ = _loc21_ * _loc21_,_loc15_ - 96);
            sf64(_loc29_ = lf64(_loc15_ - 96),_loc15_ - 288);
            var _loc22_:*;
            si32(_loc22_ = li32(_loc22_ = (_loc22_ = _loc15_ - 288) | 4),(_loc28_ = _loc15_ - 296) | 4);
            sf64(lf64(_loc15_ - 96),_loc15_ - 280);
            si32(_loc31_ = (_loc31_ = li32(_loc15_ - 280)) & -134217728,_loc15_ - 296);
            _loc29_ = ((_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = _loc25_ * 0.0024065995003271137) + 0.0013845669830409657) * _loc25_) + 0.005538594464299175) * _loc25_) + 0.26575719865153347) * _loc25_) + 0.6213895718218209) / ((_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = _loc25_ * 0.00000613275507472444) + 0.0000935021023573789) * _loc25_) + -0.00176012741431667) * _loc25_) + 0.005124493479806662) * _loc25_) + 0.030787817615617552) * _loc25_) + -0.14673413178200542) * _loc25_) + -0.20747456194385994) * _loc25_) + 1.0625852194801617) * _loc25_) + 1.4501953125);
            sf64(_loc30_ = lf64(_loc15_ - 296),_loc15_ - 96);
            sf64(_loc29_,_loc15_ - 80);
            sf64(lf64(_loc15_ - 80),_loc15_ - 312);
            var _loc20_:*;
            var _loc19_:*;
            si32(_loc19_ = li32(_loc19_ = (_loc19_ = _loc15_ - 312) | 4),(_loc20_ = _loc15_ - 320) | 4);
            sf64(lf64(_loc15_ - 80),_loc15_ - 304);
            si32(_loc22_ = (_loc22_ = li32(_loc15_ - 304)) & -134217728,_loc15_ - 320);
            var _loc3_:* = lf64(_loc15_ - 320);
            sf64(_loc3_,_loc15_ - 80);
            var _loc2_:* = _loc30_ * _loc3_;
            var _loc4_:*;
            sf64(_loc4_ = _loc2_ + 0.8856031944108887,_loc15_ - 80);
            var _loc8_:*;
            sf64(_loc8_ = lf64(_loc15_ - 80),_loc15_ - 336);
            var _loc18_:*;
            var _loc7_:*;
            si32(_loc7_ = li32(_loc7_ = (_loc7_ = _loc15_ - 336) | 4),(_loc18_ = _loc15_ - 344) | 4);
            sf64(lf64(_loc15_ - 80),_loc15_ - 328);
            si32(_loc19_ = (_loc19_ = li32(_loc15_ - 328)) & -134217728,_loc15_ - 344);
            sf64(_loc25_ = lf64(_loc15_ - 344),_loc15_ - 80);
            _loc23_ = _loc25_ + ((_loc21_ = (_loc21_ = 0.8856031944108887 - _loc25_) + _loc2_) + ((_loc25_ = (_loc25_ = (_loc25_ = (_loc25_ -= _loc21_) + 0) * (_loc21_ + _loc25_) + (_loc27_ - _loc30_)) * _loc29_ + _loc30_ * (_loc29_ - _loc3_)) + -4.99642703646902e-17));
         }
         else
         {
            _loc23_ = _loc1_ + -1;
            sf64(_loc1_,_loc15_ - 192);
            sf64(_loc27_ = lf64(_loc15_ - 192),_loc15_ - 360);
            si32(_loc26_ = li32(_loc26_ = (_loc26_ = _loc15_ - 360) | 4),(_loc24_ = _loc15_ - 368) | 4);
            sf64(lf64(_loc15_ - 192),_loc15_ - 352);
            si32(_loc14_ = (_loc14_ = li32(_loc15_ - 352)) & -134217728,_loc15_ - 368);
            sf64(_loc6_ = lf64(_loc15_ - 368),_loc15_ - 192);
            _loc5_ = _loc6_ + -1;
            sf64(_loc12_ = _loc23_ - _loc5_,_loc15_ - 184);
            _loc11_ = _loc23_ + -1;
            _loc10_ = _loc12_;
            if(!(_loc11_ <= 0.06612433246836236 | _loc11_ != _loc11_ | false))
            {
               do
               {
                  _loc1_ = _loc11_;
                  sf64(_loc25_ = _loc6_ * _loc5_,_loc15_ - 192);
                  _loc27_ = lf64(_loc15_ - 192);
                  sf64(_loc21_ = lf64(_loc15_ - 192),_loc15_ - 384);
                  _loc26_ = (_loc26_ = _loc15_ - 392) | 4;
                  si32(_loc31_ = li32(_loc31_ = (_loc31_ = _loc15_ - 384) | 4),_loc26_);
                  sf64(_loc27_,_loc15_ - 376);
                  si32(_loc24_ = (_loc24_ = li32(_loc15_ - 376)) & -134217728,_loc15_ - 392);
                  sf64(_loc9_ = lf64(_loc15_ - 392),_loc15_ - 192);
                  _loc21_ = _loc10_ * _loc23_;
                  _loc27_ = (_loc27_ = _loc6_ * _loc12_) + _loc21_;
                  _loc25_ -= _loc9_;
                  _loc10_ = _loc27_ + _loc25_;
                  _loc11_ = _loc1_ + -1;
                  _loc5_ += -1;
                  _loc6_ = _loc9_;
                  _loc23_ = _loc1_;
               }
               while(_loc11_ > 0.06612433246836236);
               
               sf64(_loc10_,_loc15_ - 184);
               _loc6_ = _loc9_;
               _loc12_ = _loc10_;
               _loc23_ = _loc1_;
            }
            sf64(_loc25_ = _loc23_ + -0.46163214496836236,_loc15_ - 64);
            _loc27_ = lf64(_loc15_ - 64);
            sf64(_loc21_ = lf64(_loc15_ - 64),_loc15_ - 408);
            _loc26_ = (_loc26_ = _loc15_ - 416) | 4;
            si32(_loc31_ = li32(_loc31_ = (_loc31_ = _loc15_ - 408) | 4),_loc26_);
            sf64(_loc27_,_loc15_ - 400);
            si32(_loc24_ = (_loc24_ = li32(_loc15_ - 400)) & -134217728,_loc15_ - 416);
            sf64(_loc21_ = lf64(_loc15_ - 416),_loc15_ - 64);
            sf64(_loc27_ = _loc21_ * _loc21_,_loc15_ - 64);
            _loc30_ = lf64(_loc15_ - 64);
            sf64(_loc29_ = lf64(_loc15_ - 64),_loc15_ - 432);
            _loc28_ = (_loc28_ = _loc15_ - 440) | 4;
            si32(_loc22_ = li32(_loc22_ = (_loc22_ = _loc15_ - 432) | 4),_loc28_);
            sf64(_loc30_,_loc15_ - 424);
            si32(_loc31_ = (_loc31_ = li32(_loc15_ - 424)) & -134217728,_loc15_ - 440);
            _loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = _loc25_ * 0.0024065995003271137) + 0.0013845669830409657) * _loc25_) + 0.005538594464299175) * _loc25_) + 0.26575719865153347) * _loc25_) + 0.6213895718218209;
            _loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = (_loc29_ = _loc25_ * 0.00000613275507472444) + 0.0000935021023573789) * _loc25_) + -0.00176012741431667) * _loc25_) + 0.005124493479806662) * _loc25_) + 0.030787817615617552) * _loc25_) + -0.14673413178200542) * _loc25_) + -0.20747456194385994) * _loc25_) + 1.0625852194801617) * _loc25_) + 1.4501953125;
            _loc29_ = _loc30_ / _loc29_;
            sf64(_loc30_ = lf64(_loc15_ - 440),_loc15_ - 64);
            sf64(_loc29_,_loc15_ - 48);
            _loc2_ = lf64(_loc15_ - 48);
            _loc3_ = lf64(_loc15_ - 48);
            sf64(_loc3_,_loc15_ - 456);
            _loc20_ = (_loc20_ = _loc15_ - 464) | 4;
            si32(_loc19_ = li32(_loc19_ = (_loc19_ = _loc15_ - 456) | 4),_loc20_);
            sf64(_loc2_,_loc15_ - 448);
            si32(_loc22_ = (_loc22_ = li32(_loc15_ - 448)) & -134217728,_loc15_ - 464);
            _loc3_ = lf64(_loc15_ - 464);
            sf64(_loc3_,_loc15_ - 48);
            _loc2_ = _loc30_ * _loc3_;
            sf64(_loc4_ = _loc2_ + 0.8856031944108887,_loc15_ - 48);
            _loc4_ = lf64(_loc15_ - 48);
            sf64(_loc8_ = lf64(_loc15_ - 48),_loc15_ - 480);
            _loc18_ = (_loc18_ = _loc15_ - 488) | 4;
            si32(_loc7_ = li32(_loc7_ = (_loc7_ = _loc15_ - 480) | 4),_loc18_);
            sf64(_loc4_,_loc15_ - 472);
            si32(_loc19_ = (_loc19_ = li32(_loc15_ - 472)) & -134217728,_loc15_ - 488);
            _loc4_ = _loc21_ + _loc25_;
            _loc25_ = (_loc25_ = (_loc25_ -= _loc21_) + 0) * _loc4_;
            _loc27_ -= _loc30_;
            _loc25_ = (_loc25_ += _loc27_) * _loc29_;
            _loc27_ = _loc29_ - _loc3_;
            _loc27_ = _loc30_ * _loc27_;
            _loc27_ = (_loc25_ += _loc27_) + -4.99642703646902e-17;
            sf64(_loc25_ = lf64(_loc15_ - 488),_loc15_ - 48);
            _loc21_ = (_loc21_ = (_loc21_ = 0.8856031944108887 - _loc25_) + _loc2_) + _loc27_;
            _loc27_ = _loc6_ * _loc21_;
            _loc21_ = _loc25_ + _loc21_;
            _loc27_ = (_loc21_ = _loc12_ * _loc21_) + _loc27_;
            _loc23_ = (_loc25_ *= _loc6_) + _loc27_;
         }
      }
      else if(!(_loc23_ <= 1e-17 | _loc23_ != _loc23_ | false))
      {
         if(!(_loc23_ >= 0.06612433246836236 | _loc23_ != _loc23_ | false))
         {
            sf64(_loc23_,_loc15_ - 200);
            sf64(_loc27_ = lf64(_loc15_ - 200),_loc15_ - 560);
            si32(_loc26_ = li32(_loc26_ = (_loc26_ = _loc15_ - 560) | 4),(_loc24_ = _loc15_ - 568) | 4);
            sf64(lf64(_loc15_ - 200),_loc15_ - 552);
            si32(_loc14_ = (_loc14_ = li32(_loc15_ - 552)) & -134217728,_loc15_ - 568);
            sf64(_loc27_ = lf64(_loc15_ - 568),_loc15_ - 200);
            sf64(_loc21_ = (_loc25_ = _loc27_ * _loc27_) + _loc23_,_loc15_ - 224);
            sf64(_loc30_ = lf64(_loc15_ - 224),_loc15_ - 584);
            si32(_loc28_ = li32(_loc28_ = (_loc28_ = _loc15_ - 584) | 4),(_loc31_ = _loc15_ - 592) | 4);
            sf64(lf64(_loc15_ - 224),_loc15_ - 576);
            si32(_loc26_ = (_loc26_ = li32(_loc15_ - 576)) & -134217728,_loc15_ - 592);
            sf64(_loc9_ = lf64(_loc15_ - 592),_loc15_ - 224);
            _loc1_ = (_loc25_ = (_loc21_ = _loc23_ - _loc9_) + _loc25_) + (_loc27_ += _loc23_) * (_loc23_ - _loc27_);
            sf64(_loc1_,_loc15_ - 216);
            sf64(_loc5_ = _loc23_ + 0.5383678550316376,_loc15_ - 200);
            sf64(_loc10_ = (_loc25_ = 0.5383678550316376 - _loc5_) + _loc23_,_loc15_ - 208);
            _loc23_ = _loc9_ + _loc1_;
         }
         else
         {
            sf64(_loc23_,_loc15_ - 224);
            sf64(_loc27_ = lf64(_loc15_ - 224),_loc15_ - 536);
            si32(_loc26_ = li32(_loc26_ = (_loc26_ = _loc15_ - 536) | 4),(_loc24_ = _loc15_ - 544) | 4);
            sf64(lf64(_loc15_ - 224),_loc15_ - 528);
            si32(_loc14_ = (_loc14_ = li32(_loc15_ - 528)) & -134217728,_loc15_ - 544);
            sf64(_loc9_ = lf64(_loc15_ - 544),_loc15_ - 224);
            _loc1_ = _loc23_ - _loc9_;
            sf64(_loc1_,_loc15_ - 216);
            sf64(_loc5_ = _loc23_ + -0.46163214496836236,_loc15_ - 200);
            sf64(_loc10_ = (_loc25_ = -0.46163214496836236 - _loc5_) + _loc23_,_loc15_ - 208);
         }
         sf64(_loc5_,_loc15_ - 32);
         _loc25_ = lf64(_loc15_ - 32);
         sf64(_loc27_ = lf64(_loc15_ - 32),_loc15_ - 608);
         _loc24_ = (_loc24_ = _loc15_ - 616) | 4;
         si32(_loc26_ = li32(_loc26_ = (_loc26_ = _loc15_ - 608) | 4),_loc24_);
         sf64(_loc25_,_loc15_ - 600);
         si32(_loc14_ = (_loc14_ = li32(_loc15_ - 600)) & -134217728,_loc15_ - 616);
         sf64(_loc27_ = lf64(_loc15_ - 616),_loc15_ - 32);
         sf64(_loc25_ = _loc27_ * _loc27_,_loc15_ - 32);
         _loc21_ = lf64(_loc15_ - 32);
         sf64(_loc30_ = lf64(_loc15_ - 32),_loc15_ - 632);
         _loc31_ = (_loc31_ = _loc15_ - 640) | 4;
         si32(_loc28_ = li32(_loc28_ = (_loc28_ = _loc15_ - 632) | 4),_loc31_);
         sf64(_loc21_,_loc15_ - 624);
         si32(_loc26_ = (_loc26_ = li32(_loc15_ - 624)) & -134217728,_loc15_ - 640);
         _loc21_ = (_loc21_ = (_loc21_ = (_loc21_ = (_loc21_ = (_loc21_ = (_loc21_ = (_loc21_ = _loc5_ * 0.0024065995003271137) + 0.0013845669830409657) * _loc5_) + 0.005538594464299175) * _loc5_) + 0.26575719865153347) * _loc5_) + 0.6213895718218209;
         _loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = (_loc30_ = _loc5_ * 0.00000613275507472444) + 0.0000935021023573789) * _loc5_) + -0.00176012741431667) * _loc5_) + 0.005124493479806662) * _loc5_) + 0.030787817615617552) * _loc5_) + -0.14673413178200542) * _loc5_) + -0.20747456194385994) * _loc5_) + 1.0625852194801617) * _loc5_) + 1.4501953125;
         _loc30_ = _loc21_ / _loc30_;
         sf64(_loc21_ = lf64(_loc15_ - 640),_loc15_ - 32);
         sf64(_loc30_,_loc15_ - 16);
         _loc29_ = lf64(_loc15_ - 16);
         _loc2_ = lf64(_loc15_ - 16);
         sf64(_loc2_,_loc15_ - 656);
         _loc22_ = (_loc22_ = _loc15_ - 664) | 4;
         si32(_loc20_ = li32(_loc20_ = (_loc20_ = _loc15_ - 656) | 4),_loc22_);
         sf64(_loc29_,_loc15_ - 648);
         si32(_loc28_ = (_loc28_ = li32(_loc15_ - 648)) & -134217728,_loc15_ - 664);
         _loc2_ = lf64(_loc15_ - 664);
         sf64(_loc2_,_loc15_ - 16);
         _loc3_ = (_loc29_ = _loc21_ * _loc2_) + 0.8856031944108887;
         sf64(_loc3_,_loc15_ - 16);
         _loc3_ = lf64(_loc15_ - 16);
         sf64(_loc4_ = lf64(_loc15_ - 16),_loc15_ - 680);
         _loc19_ = (_loc19_ = _loc15_ - 688) | 4;
         si32(_loc18_ = li32(_loc18_ = (_loc18_ = _loc15_ - 680) | 4),_loc19_);
         sf64(_loc3_,_loc15_ - 672);
         si32(_loc20_ = (_loc20_ = li32(_loc15_ - 672)) & -134217728,_loc15_ - 688);
         _loc3_ = lf64(_loc15_ - 688);
         sf64(_loc3_,_loc15_ - 16);
         sf64(_loc4_ = _loc3_ / _loc23_,_loc15_ - 208);
         _loc4_ = lf64(_loc15_ - 208);
         sf64(_loc8_ = lf64(_loc15_ - 208),_loc15_ - 704);
         _loc18_ = (_loc18_ = _loc15_ - 712) | 4;
         si32(_loc7_ = li32(_loc7_ = (_loc7_ = _loc15_ - 704) | 4),_loc18_);
         sf64(_loc4_,_loc15_ - 696);
         si32(_loc19_ = (_loc19_ = li32(_loc15_ - 696)) & -134217728,_loc15_ - 712);
         _loc4_ = _loc27_ + _loc5_;
         _loc27_ = (_loc27_ = (_loc27_ = _loc5_ - _loc27_) + _loc10_) * _loc4_;
         _loc25_ -= _loc21_;
         _loc25_ = (_loc25_ = _loc27_ + _loc25_) * _loc30_;
         _loc27_ = _loc30_ - _loc2_;
         _loc27_ = _loc21_ * _loc27_;
         _loc25_ = (_loc25_ += _loc27_) + -4.99642703646902e-17;
         _loc27_ = (_loc27_ = (_loc27_ = 0.8856031944108887 - _loc3_) + _loc29_) + _loc25_;
         sf64(_loc25_ = lf64(_loc15_ - 712),_loc15_ - 208);
         _loc21_ = _loc1_ * _loc25_;
         _loc30_ = _loc9_ * _loc25_;
         _loc23_ = (_loc27_ = (_loc27_ = (_loc21_ = (_loc30_ = _loc3_ - _loc30_) - _loc21_) + _loc27_) / _loc23_) + _loc25_;
      }
      else if(!(_loc23_ <= -1e-17 | _loc23_ != _loc23_ | false))
      {
         _loc23_ = 1 / _loc23_;
      }
      else
      {
         sf64(_loc23_,_loc15_ - 496);
         if((_loc14_ = (_loc14_ = (_loc14_ = li32(_loc14_ = (_loc14_ = _loc15_ - 496) | 4)) & 2147483647) + -2146435072) >= 0)
         {
            _loc23_ -= _loc23_;
         }
         else
         {
            _loc13_ -= 16;
            sf64(_loc23_,_loc13_);
            ESP = _loc13_;
            F_ceil();
            _loc13_ += 16;
            _loc1_ = st0;
            if(!(_loc1_ != _loc23_ | _loc1_ != _loc1_ | _loc23_ != _loc23_))
            {
               _loc23_ = (_loc25_ = _loc23_ - _loc23_) / 0;
            }
            else
            {
               if(!((_loc10_ = _loc1_ - _loc23_) <= 0.5 | _loc10_ != _loc10_ | false))
               {
                  _loc10_ = 1 - _loc10_;
               }
               _loc13_ -= 16;
               _loc1_ *= 0.5;
               sf64(_loc1_,_loc13_);
               ESP = _loc13_;
               F_ceil();
               _loc13_ += 16;
               _loc9_ = st0;
               if(!(_loc10_ >= 0.25 | _loc10_ != _loc10_ | false))
               {
                  _loc10_ = Math.sin(_loc10_ * 3.141592653589793);
               }
               else
               {
                  _loc10_ = Math.cos((_loc25_ = 0.5 - _loc10_) * 3.141592653589793);
               }
               if(!(_loc23_ >= -170 | _loc23_ != _loc23_ | false))
               {
                  if(!(_loc23_ >= -190 | _loc23_ != _loc23_ | false))
                  {
                     _loc16_ = 1;
                     if(_loc9_ != _loc1_)
                     {
                        _loc16_ = 0;
                     }
                     _loc17_ = 8;
                     if(_loc16_ == 0)
                     {
                        _loc17_ = 0;
                     }
                     _loc23_ = lf64(_loc14_ = LCPI311_0 + _loc17_);
                  }
                  else
                  {
                     _loc13_ -= 16;
                     si32(_loc14_ = _loc15_ - 112,_loc13_);
                     sf64(_loc25_ = 1 - _loc23_,_loc13_ + 4);
                     ESP = _loc13_;
                     F___log__D();
                     _loc13_ += 16;
                     _loc30_ = _loc25_ + -0.5;
                     sf64(_loc30_,_loc15_ - 128);
                     sf64(_loc29_ = lf64(_loc15_ - 128),_loc15_ - 512);
                     si32(_loc22_ = li32(_loc22_ = (_loc22_ = _loc15_ - 512) | 4),(_loc28_ = _loc15_ - 520) | 4);
                     sf64(lf64(_loc15_ - 128),_loc15_ - 504);
                     si32(_loc24_ = (_loc24_ = li32(_loc15_ - 504)) & -134217728,_loc15_ - 520);
                     sf64(_loc27_ = lf64(_loc15_ - 520),_loc15_ - 128);
                     _loc13_ -= 16;
                     sf64(3.141592653589793 / _loc10_,_loc13_ + 4);
                     si32(_loc22_ = _loc15_ - 144,_loc13_);
                     _loc29_ = lf64(_loc15_ - 104) * _loc30_;
                     _loc30_ -= _loc27_;
                     _loc21_ = lf64(_loc15_ - 112) + -1;
                     _loc25_ = (_loc30_ = (_loc30_ = (_loc30_ *= _loc21_) + _loc29_) + -0.00000677929532725822 + (_loc29_ = (_loc29_ = (((((((_loc29_ = 1 / (_loc25_ * _loc25_)) * -0.014470556242142892 + 0.0056939446343941165) * _loc29_ + -0.001897735264638792) * _loc29_ + 0.0008414285603466537) * _loc29_ + -0.0005952350825666728) * _loc29_ + 0.0007936507787544356) * _loc29_ + -0.0027777777777454812) * _loc29_) + 0.08333333333333331) / _loc25_) + 0.4189453125 + (_loc27_ *= _loc21_);
                     ESP = _loc13_;
                     F___log__D();
                     _loc13_ += 16;
                     _loc27_ = (_loc27_ = (_loc27_ -= _loc25_) + 0.4189453125) + _loc30_ - lf64(_loc15_ - 136);
                     sf64(-(_loc30_ = (_loc25_ -= lf64(_loc15_ - 144)) + _loc27_),_loc13_ -= 16);
                     sf64(_loc25_ = (_loc25_ -= _loc30_) + _loc27_,_loc13_ + 8);
                     ESP = _loc13_;
                     F___exp__D();
                     _loc13_ += 16;
                     _loc23_ = st0;
                     if(!(_loc9_ != _loc1_ | _loc9_ != _loc9_ | _loc1_ != _loc1_))
                     {
                        _loc23_ = -_loc23_;
                     }
                  }
               }
               else
               {
                  _loc5_ = 1 - _loc23_;
                  if(!((_loc25_ = 1 - _loc5_) != _loc23_ | _loc25_ != _loc25_ | _loc23_ != _loc23_))
                  {
                     _loc13_ -= 16;
                     sf64(_loc5_,_loc13_);
                     ESP = _loc13_;
                     F_tgamma();
                     _loc13_ += 16;
                     _loc23_ = st0;
                  }
                  else
                  {
                     _loc13_ -= 16;
                     sf64(_loc25_ = -_loc23_,_loc13_);
                     ESP = _loc13_;
                     F_tgamma();
                     _loc13_ += 16;
                     _loc23_ = (_loc27_ = st0) * _loc25_;
                  }
                  if(!(_loc9_ != _loc1_ | _loc9_ != _loc9_ | _loc1_ != _loc1_))
                  {
                     _loc23_ = -_loc23_;
                  }
                  _loc25_ = _loc23_ * _loc10_;
                  _loc23_ = 3.141592653589793 / _loc25_;
               }
            }
         }
      }
      st0 = _loc23_;
      ESP = _loc13_ = _loc15_;
   }
}
